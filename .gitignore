# Visual Studio Code
/.vscode
!/.vscode/extensions.json
.history

# Intelij-IDEA
/.idea

# Node.js
node_modules
build
dist

# config
/.config/*
!/.config/example.yml
!/.config/sonic_example.cfg
!/.config/sonic_docker_example.cfg

# misskey
/build
built
/data
/.cache-loader
/db
/elasticsearch
npm-debug.log
*.pem
run.bat
api-docs.json
*.log
/redis
*.code-workspace
.DS_Store
/files
ormconfig.json

# blender backups
*.blend1
*.blend2
*.blend3
*.blend4
*.blend5

# Created by https://www.toptal.com/developers/gitignore/api/terraform
# Edit at https://www.toptal.com/developers/gitignore?templates=terraform

### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# End of https://www.toptal.com/developers/gitignore/api/terraform